openapi: 3.0.3
info:
  title: Battery Management System API
  version: 1.0.0
  description: REST API to ingest and query EV battery telemetry
servers:
  - url: http://localhost:8080
paths:
  /api/auth/login:
    post:
      summary: Login and receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        '200':
          description: OK
  /api/auth/register:
    post:
      summary: Register a new user and receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }
                  user:
                    type: object
                    properties:
                      id: { type: integer }
                      email: { type: string }
                      created_at: { type: string, format: date-time }
        '409':
          description: User already exists
  /api/auth/me:
    get:
      summary: Get current user information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id: { type: integer }
                      email: { type: string }
                      created_at: { type: string, format: date-time }
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security:
        - bearerAuth: []
  /api/battery/data:
    post:
      summary: Ingest a battery reading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                battery_id: { type: string }
                current: { type: number }
                voltage: { type: number }
                temperature: { type: number }
                time: { type: string, format: date-time }
      responses:
        '201':
          description: Created
  /api/battery/{id}:
    get:
      summary: Get all readings for a battery (paginated)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: query
          name: page
          schema: { type: integer, default: 1 }
        - in: query
          name: pageSize
          schema: { type: integer, default: 500 }
      responses:
        '200':
          description: OK
      security:
        - bearerAuth: []
  /api/battery/{id}/{field}:
    get:
      summary: Get specific field over time (optionally within a time range)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: path
          name: field
          required: true
          schema: { type: string, enum: [current, voltage, temperature] }
        - in: query
          name: start
          schema: { type: string, format: date-time }
        - in: query
          name: end
          schema: { type: string, format: date-time }
      responses:
        '200':
          description: OK
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
